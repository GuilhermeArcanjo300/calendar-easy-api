generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ProfileRole {
  ADMIN
  USER
}

enum StatusCalendar {
  COMPLETED
  CONFIRMED
  PENDING
  CANCELED
}

model User {
  id        String      @id @default(uuid())
  name      String
  email     String      @unique
  phone     String?
  profile   ProfileRole @default(USER)
  password  String?
  createdAt DateTime    @default(now()) @map("created_at")
  updatedAt DateTime    @updatedAt @map("updated_at")
  deletedAt DateTime?   @map("deleted_at")

  enterprise Enterprise?

  @@map("users")
}

model Enterprise {
  id          String    @id @default(uuid())
  name        String
  address     String
  phone       String
  description String?
  userId      String    @unique @map("user_id")
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")
  deletedAt   DateTime? @map("deleted_at")

  user User @relation(fields: [userId], references: [id])

  clients  Client[]
  services Service[]

  @@map("enterprise")
}

model Client {
  id           String    @id @default(uuid())
  name         String
  email        String?
  phone        String?
  active       Boolean   @default(true)
  observation  String?
  enterpriseId String    @map("enterprise_id")
  createdAt    DateTime  @default(now()) @map("created_at")
  updatedAt    DateTime  @updatedAt @map("updated_at")
  deletedAt    DateTime? @map("deleted_at")

  enterprise Enterprise @relation(fields: [enterpriseId], references: [id])

  calendar Calendar[]

  @@map("clients")
}

model Service {
  id           String    @id @default(uuid())
  name         String
  description  String
  minute       Int
  value        Decimal   @db.Decimal(20, 2)
  active       Boolean   @default(true)
  enterpriseId String    @map("enterprise_id")
  createdAt    DateTime  @default(now()) @map("created_at")
  updatedAt    DateTime  @updatedAt @map("updated_at")
  deletedAt    DateTime? @map("deleted_at")

  enterprise Enterprise @relation(fields: [enterpriseId], references: [id])

  calendar Calendar[]

  @@map("services")
}

model Calendar {
  id        String         @id @default(uuid())
  clientId  String         @map("client_id")
  serviceId String         @map("service_id")
  date      DateTime       @db.Date
  startTime DateTime       @map("start_time") @db.Time()
  endTime   DateTime       @map("end_time") @db.Time()
  status    StatusCalendar
  createdAt DateTime       @default(now()) @map("created_at")
  updatedAt DateTime       @updatedAt @map("updated_at")
  deletedAt DateTime?      @map("deleted_at")

  client  Client  @relation(fields: [clientId], references: [id])
  service Service @relation(fields: [serviceId], references: [id])

  @@map("calendar")
}
